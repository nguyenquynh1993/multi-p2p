#summary Multi-P2P overviews:
#labels Phase-Requirements,requirements
 * *To save our time and to achieve the best results of the project, everyone should try to at least finish his part at his best responsibility*,
 * *Pham Thai Son* <blademaster.tauren@gmail.com> is the main Researcher & Developer of the "Multi-P2P" project. Le Tien Anh <letienanh@gmail.com> and Nguyen Quang Hoang <hoangnq@gmail.com> will follow his research and verify his developments, 
 * Meetings will be held once every two odd weeks of a month via Dimdim.com. During a meeting, a presentation regarding the work progress will be made,  
 * In order to close the project, 3 Work Packages (WPs) are to be finished. Outputs of WPs are Deliverables (Ds) including documents, executable binaries and source/simulation codes. 

= Multi-P2P Work Packages (WPs) and Deliverables (Ds)= 
 * Inside the svn tree, you will find the necessary source codes for your development. The "Deliverables" folder is reserved for the storage of deliverable/output documents and/or source/simulation codes of different WPs. You can upload, edit drafts of your deliverables in this folder. 
 * You can check-out source codes, make necessary changes and then commit them back to the svn system under the same directory. No need to create a brand new folder. After finishing all changes, you can upload the final/draft version of your code to the appropriate Deliverables folder. 
== WP1: Background knowledges ==
 # D1.1 (document): Understanding main DHT overlay algorithms (Chord, Pastry, Tapastry),
 # D1.2 (document): Understanding IP-multicasting and main Application Level Multicasting algorithms(Scribe, ESM),
 # D1.3 (document): Understanding overlay simulation using OverSim.

== WP2: Building P2P communities on a DHT overlay and an ALM algorithm and bring that community to the PlanetLab == 
 # D2.1 (document/executable binaries/source codes): Building a community peer software (with proper GUI) which can:
  * Put/get keys to the Harsh table,
  * Save/distribute small files into the overlay,
  * A peer can create, join (a) group(s) with a "group name/topic" within the p2p community,
  * Each peer in a group can be notified with new event (eventing), can join/disjoint, subscribe/un-subscribe to/from that group.
 # D2.2 (document/executable binaries/source codes) The community can be deployed worldwide on the PlanetLab.    

== WP3: Building a video conference service using vic (and other tools) on top of the P2P communities which have been built in WP2 == 
 # D3.1 (document/simulation codes) Simulation of multicasting video streams on top of a multicast-enabled P2P overlay using OverSim,
 # D3.2 (document/executable binaries/source codes) A video conference service (vic) on top of a multicast-enabled P2P overlay. Vic should support ALM not only IP-Multicast.